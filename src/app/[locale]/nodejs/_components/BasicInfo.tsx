import {
  H2Typo,
  LeadTypo,
  PTypo,
  BlockquoteTypo,
  InlineCodeTypo,
  ListTypo,
  H3Typo,
} from "@/components/typography";
import { Card, CardHeader, CardContent } from "@/components/ui/card";
import React from "react";

const BasicInfo = () => {
  return (
    <Card>
      <CardHeader>
        <H2Typo>Node.js</H2Typo>
        <LeadTypo>
          Node.js l√† m·ªôt <b>JavaScript runtime environment</b> ‚Äì nghƒ©a l√† m√¥i
          tr∆∞·ªùng cho ph√©p ch·∫°y m√£ JavaScript
          <b> ngo√†i tr√¨nh duy·ªát</b>, tr·ª±c ti·∫øp trong m√°y t√≠nh. Tr∆∞·ªõc ƒë√¢y
          JavaScript ch·ªâ ch·∫°y ƒë∆∞·ª£c trong tr√¨nh duy·ªát nh∆∞ Chrome, Firefox,...
          Nh∆∞ng v·ªõi Node.js, b·∫°n c√≥ th·ªÉ vi·∫øt c√°c ch∆∞∆°ng tr√¨nh (ho·∫∑c API, server)
          b·∫±ng JavaScript m√† kh√¥ng c·∫ßn tr√¨nh duy·ªát.
          <br />
          <br />
          üìå N·∫øu tr√¨nh duy·ªát l√† n∆°i ch·∫°y JavaScript ·ªü<b>
            giao di·ªán ng∆∞·ªùi d√πng
          </b>{" "}
          (front-end), th√¨:
          <br />‚Üí Node.js l√† n∆°i ch·∫°y JavaScript ·ªü <b>ph√≠a m√°y ch·ªß</b>
          (back-end).
          <br />
          ƒêi·ªÅu ƒë√≥ c√≥ nghƒ©a l√† b·∫°n c√≥ th·ªÉ d√πng chung m·ªôt ng√¥n ng·ªØ (JS) cho c·∫£
          client v√† server.
          <br />
          <br />
          Node.js ƒë∆∞·ª£c x√¢y d·ª±ng d·ª±a tr√™n
          <b>Chrome&apos;s V8 JavaScript engine</b> ‚Äì ƒë√¢y l√† l√µi x·ª≠ l√Ω
          JavaScript r·∫•t m·∫°nh, do Google ph√°t tri·ªÉn cho tr√¨nh duy·ªát Chrome.
          <br />
          ‚úÖ Nh·ªù engine n√†y, Node.js c√≥ th·ªÉ th·ª±c thi m√£ JavaScript r·∫•t nhanh,
          t∆∞∆°ng ƒë∆∞∆°ng c√°c ng√¥n ng·ªØ server-side kh√°c nh∆∞ PHP, Python,...
          <br />
          <br />‚ú® T√≥m l·∫°i: Node.js bi·∫øn JavaScript th√†nh m·ªôt ng√¥n ng·ªØ
          <b>fullstack</b> th·ª±c th·ª• ‚Äì c√≥ th·ªÉ d√πng cho c·∫£ giao di·ªán (HTML/CSS) v√†
          m√°y ch·ªß (API, DB, Auth...).
        </LeadTypo>
      </CardHeader>

      <CardContent>
        <PTypo>
          Tr∆∞·ªõc khi c√≥ Node.js, JavaScript ch·ªâ ƒë∆∞·ª£c d√πng ƒë·ªÉ x·ª≠ l√Ω logic ph√≠a
          giao di·ªán (tr√¨nh duy·ªát). Nh∆∞ng nh·ªù Node.js, ch√∫ng ta c√≥ th·ªÉ s·ª≠ d·ª•ng
          c√πng m·ªôt ng√¥n ng·ªØ JavaScript ƒë·ªÉ x·ª≠ l√Ω c·∫£ <b>front-end</b> v√†
          <b>back-end</b>.
        </PTypo>

        <ListTypo>
          <li>
            <b>·ªû ph√≠a front-end:</b> Node.js th∆∞·ªùng ƒë∆∞·ª£c d√πng ƒë·ªÉ t·∫°o
            <b>m√°y ch·ªß n·ªôi b·ªô (dev server)</b> ƒë·ªÉ ph·ª•c v·ª• giao di·ªán (v√≠ d·ª• nh∆∞
            khi d√πng <InlineCodeTypo>npm run dev</InlineCodeTypo> ƒë·ªÉ kh·ªüi ch·∫°y
            React/Vite/Next.js). C√°c tool build (Vite/Webpack/Babel/ESLint...)
            ƒë·ªÅu l√† c√°c th∆∞ vi·ªán JavaScript. Ch√∫ng ƒë∆∞·ª£c vi·∫øt b·∫±ng JavaScript V√†
            ch·ªâ ch·∫°y ƒë∆∞·ª£c trong m√¥i tr∆∞·ªùng c√≥ th·ªÉ th·ª±c thi JS ngo√†i tr√¨nh duy·ªát
            ‚Üí ch√≠nh l√† Node.js. T·ª©c l√†: Node.js ch√≠nh l√† n·ªÅn t·∫£ng gi√∫p ‚Äúch·∫°y
            ƒë∆∞·ª£c‚Äù c√°c ch∆∞∆°ng tr√¨nh JS n√†y trong Terminal c·ªßa b·∫°n.Ch·∫°y nh∆∞ m·ªôt
            ch∆∞∆°ng tr√¨nh d√≤ng l·ªánh (CLI). Tr√¨nh duy·ªát s·∫Ω kh√¥ng l√†m ƒë∆∞·ª£c nh·ªØng
            ƒëi·ªÅu n√†y.Kh√¥ng c√≥ Node.js ‚áí b·∫°n s·∫Ω kh√¥ng th·ªÉ d√πng ƒë∆∞·ª£c
            React/Vite/Webpack/... trong local m√°y c·ªßa m√¨nh.
            <BlockquoteTypo>
              <b> T·∫°i sao c·∫ßn &quot;server&quot;?</b>
              <br />
              {`V√¨ React (v√† JSX) kh√¥ng ph·∫£i l√† m√£ m√† tr√¨nh duy·ªát hi·ªÉu tr·ª±c ti·∫øp.
            B·∫°n c·∫ßn m·ªôt qu√° tr√¨nh "build" ho·∫∑c "transpile" qua
            Babel/Vite/Webpack,... üì¶ C√°c c√¥ng c·ª• ƒë√≥ (v√≠ d·ª• Vite, Webpack Dev
            Server) s·∫Ω bi√™n d·ªãch JSX Bundle t·∫•t c·∫£ file, ch·∫°y m·ªôt server ƒë·ªÉ ph√¢n
            ph·ªëi file n√†y cho tr√¨nh duy·ªát üìå => ƒê√¢y l√† m·ªôt server Node.js
            nh·ªè, ch·∫°y trong qu√° tr√¨nh dev. Kh√¥ng ph·∫£i server back-end (nh∆∞
            Express), m√† l√† ch·ªâ l√† 1 Dev Server (do Node.js + tool nh∆∞
            Vite/Webpack t·∫°o ra) ƒë·ªÉ ph·ª•c v·ª• giao di·ªán v√† theo d√µi thay ƒë·ªïi. M·ª•c
            ƒë√≠ch Ph·ª•c v·ª• file HTML/CSS/JS ƒë·ªÉ test giao di·ªán trong tr√¨nh
            duy·ªát.Ch·∫°y tr√™n localhost:3000, localhost:5173, tu·ª≥ tool. Server n√†y c√≥ li√™n
            quan ƒë·∫øn back-end ko? ‚ùå Kh√¥ng ‚Äì ch·ªâ ƒë·ªÉ ph·ª•c v·ª• React code ra tr√¨nh
            duy·ªát D√πng ƒë∆∞·ª£c khi n√†o ‚úÖ Khi ph√°t tri·ªÉn (dev) ‚Äì c√≤n production s·∫Ω
            build ra file tƒ©nh.`}
            </BlockquoteTypo>
            <BlockquoteTypo>
              <b>Khi n√†o kh√¥ng c·∫ßn server n√†y?</b>
              <br />
              Khi b·∫°n ch·∫°y l·ªánh <InlineCodeTypo>npm run build</InlineCodeTypo>
              Th√¨: React s·∫Ω ƒë∆∞·ª£c build th√†nh c√°c file tƒ©nh trong th∆∞ m·ª•c
              <b>/dist</b>
              ho·∫∑c <b>/build</b> B·∫°n kh√¥ng c·∫ßn server dev n·ªØa C√°c file tƒ©nh c√≥
              th·ªÉ deploy l√™n b·∫•t k·ª≥ web server n√†o (Vercel, Netlify, Apache,...)
            </BlockquoteTypo>
          </li>
          <br />
          <li>
            <b>·ªû ph√≠a back-end:</b> Node.js cho ph√©p b·∫°n vi·∫øt c√°c API, x·ª≠ l√Ω
            database, authentication,... ho√†n to√†n b·∫±ng JavaScript thay v√¨ d√πng
            c√°c ng√¥n ng·ªØ nh∆∞ PHP, Java, Python,... Khi deploy, Node.js c≈©ng gi√∫p
            kh·ªüi ƒë·ªông server ho·∫∑c x·ª≠ l√Ω c√°c request n·∫øu b·∫°n vi·∫øt back-end.
          </li>
        </ListTypo>

        <PTypo>
          Khi b·∫°n c√†i Node.js, n√≥ c≈©ng t·ª± ƒë·ªông c√†i th√™m c√¥ng c·ª• <b>npm</b> (Node
          Package Manager) ‚Äì gi√∫p c√†i ƒë·∫∑t c√°c th∆∞ vi·ªán t·ª´ <b>npmjs.com</b> ƒë·ªÉ h·ªó
          tr·ª£ ph√°t tri·ªÉn d·ª± √°n. H·∫ßu h·∫øt c√°c th∆∞ vi·ªán ph·ªï bi·∫øn nh∆∞
          <InlineCodeTypo>express</InlineCodeTypo>,
          <InlineCodeTypo>dotenv</InlineCodeTypo>,
          <InlineCodeTypo>mongoose</InlineCodeTypo> ƒë·ªÅu ho·∫°t ƒë·ªông d·ª±a tr√™n
          Node.js.
        </PTypo>
        <PTypo>
          Sau khi c√†i Node.js, b·∫°n c√≥ th·ªÉ ch·∫°y tr·ª±c ti·∫øp file JavaScript tr√™n
          m√°y t√≠nh b·∫±ng c√°ch d√πng c√¢u l·ªánh:
          <br />
          <InlineCodeTypo>node t√™n-file.js</InlineCodeTypo>
          <br />
          V√≠ d·ª•: <br />
          <InlineCodeTypo>node index.js</InlineCodeTypo>
          <br />
          C√¢u l·ªánh n√†y s·∫Ω y√™u c·∫ßu Node.js th·ª±c thi n·ªôi dung c·ªßa file
          <i>index.js</i> ngay trong m√¥i tr∆∞·ªùng d√≤ng l·ªánh (terminal).
        </PTypo>

        <BlockquoteTypo>
          Tr∆∞·ªõc ƒë√¢y, mu·ªën ch·∫°y code JavaScript b·∫°n ph·∫£i d√πng tr√¨nh duy·ªát (v√¨ n√≥
          c√≥ s·∫µn engine V8).
          <br />
          Nh∆∞ng v·ªõi Node.js, b·∫°n c√≥ th·ªÉ ch·∫°y code JavaScript
          <b>tr·ª±c ti·∫øp trong terminal</b>, kh√¥ng c·∫ßn tr√¨nh duy·ªát. ƒêi·ªÅu n√†y bi·∫øn
          JavaScript th√†nh ng√¥n ng·ªØ c√≥ th·ªÉ d√πng ƒë·ªÉ vi·∫øt ph·∫ßn m·ªÅm m√°y ch·ªß, CLI
          tool, web server,...
        </BlockquoteTypo>
        <br />

        <H3Typo>Kh·ªüi t·∫°o d·ª± √°n Node.js</H3Typo>
        <PTypo>
          Sau khi c√†i Node.js, b·∫°n c√≥ th·ªÉ kh·ªüi t·∫°o d·ª± √°n m·ªõi b·∫±ng l·ªánh:
          <br />
          <InlineCodeTypo>npm init</InlineCodeTypo>
          <br />
          L·ªánh n√†y s·∫Ω t·∫°o file <InlineCodeTypo>package.json</InlineCodeTypo>
          d√πng ƒë·ªÉ l∆∞u th√¥ng tin d·ª± √°n nh∆∞ t√™n, m√¥ t·∫£, phi√™n b·∫£n, th∆∞ vi·ªán ph·ª•
          thu·ªôc,...
        </PTypo>

        <BlockquoteTypo>
          B·∫°n c√≥ th·ªÉ th√™m c·ªù <InlineCodeTypo>-y</InlineCodeTypo> ƒë·ªÉ t·ª± ƒë·ªông ƒë·ªìng
          √Ω t·∫•t c·∫£ c√°c c√¢u h·ªèi.
          <br />
          V√≠ d·ª•: <InlineCodeTypo>npm init -y</InlineCodeTypo>
          <br />
          Thu·ªôc t√≠nh <b>main</b> trong file
          <InlineCodeTypo>package.json</InlineCodeTypo> l√† file
          <b>entry point</b> ‚Äì n∆°i Node.js s·∫Ω ch·∫°y ƒë·∫ßu ti√™n, th∆∞·ªùng l√†
          <InlineCodeTypo>index.js</InlineCodeTypo>.
        </BlockquoteTypo>
        <br />
        <H3Typo>scripts ‚Äì Vi·∫øt c√¢u l·ªánh ch·∫°y nhanh</H3Typo>
        <PTypo>
          Trong <InlineCodeTypo>package.json</InlineCodeTypo>, ph·∫ßn
          <b>scripts</b> cho ph√©p b·∫°n ƒë·ªãnh nghƒ©a c√°c c√¢u l·ªánh t√πy ch·ªânh ƒë·ªÉ ch·∫°y
          nhanh b·∫±ng <InlineCodeTypo>npm run</InlineCodeTypo>.
        </PTypo>

        <BlockquoteTypo>
          V√≠ d·ª•:
          <br />
          <InlineCodeTypo>{`"dev": "node index.js"`}</InlineCodeTypo>
          <br />
          Khi ƒë√≥, ch·∫°y <InlineCodeTypo>npm run dev</InlineCodeTypo> s·∫Ω t∆∞∆°ng
          ƒë∆∞∆°ng v·ªõi vi·ªác ch·∫°y <i>node index.js</i>.
        </BlockquoteTypo>
        <br />
        <H3Typo>
          type (Thu·ªôc t√≠nh <InlineCodeTypo>&quot;type&quot;</InlineCodeTypo>{" "}
          trong package.json)
        </H3Typo>
        <PTypo>
          Thu·ªôc t√≠nh <InlineCodeTypo>&quot;type&quot;</InlineCodeTypo> ƒë∆∞·ª£c d√πng
          ƒë·ªÉ ch·ªâ ƒë·ªãnh ki·ªÉu module cho to√†n b·ªô d·ª± √°n:
        </PTypo>

        <ListTypo>
          <li>
            <InlineCodeTypo>
              &quot;type&quot;: &quot;commonjs&quot;
            </InlineCodeTypo>
            (m·∫∑c ƒë·ªãnh): s·ª≠ d·ª•ng c√∫ ph√°p
            <InlineCodeTypo>require()</InlineCodeTypo> v√†
            <InlineCodeTypo>module.exports</InlineCodeTypo>
          </li>
          <li>
            <InlineCodeTypo>
              &quot;type&quot;: &quot;module&quot;
            </InlineCodeTypo>
            : cho ph√©p d√πng c√∫ ph√°p <InlineCodeTypo>import</InlineCodeTypo> v√†
            <InlineCodeTypo>export</InlineCodeTypo> hi·ªán ƒë·∫°i.
          </li>
          <li>
            Khi d√πng <b>type: module</b>, n·∫øu file c√≥ ƒëu√¥i
            <InlineCodeTypo>.js</InlineCodeTypo> th√¨ ph·∫£i n·∫±m trong project c√≥
            khai b√°o r√µ
            <InlineCodeTypo>
              &quot;type&quot;: &quot;module&quot;
            </InlineCodeTypo>
            , ho·∫∑c b·∫°n ph·∫£i ƒë·ªïi t√™n file th√†nh{" "}
            <InlineCodeTypo>.mjs</InlineCodeTypo>.
          </li>
          <li>
            C√≥ th·ªÉ ghi ƒë√® l·∫°i ki·ªÉu module b·∫±ng ƒëu√¥i file
            <InlineCodeTypo>.cjs</InlineCodeTypo> ho·∫∑c
            <InlineCodeTypo>.mjs</InlineCodeTypo>
          </li>
        </ListTypo>

        <BlockquoteTypo>
          V√≠ d·ª• n·∫øu b·∫°n vi·∫øt:
          <br />
          <InlineCodeTypo>
            import express from &apos;express&apos;
          </InlineCodeTypo>
          <br />
          Th√¨ b·∫°n c·∫ßn khai b√°o
          <InlineCodeTypo>&quot;type&quot;: &quot;module&quot;</InlineCodeTypo>
          trong file <InlineCodeTypo>package.json</InlineCodeTypo>
        </BlockquoteTypo>
      </CardContent>
    </Card>
  );
};

export default BasicInfo;
